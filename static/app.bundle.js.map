{"version":3,"sources":["webpack:///./src/IssueList.jsx","webpack:///./src/IssueAdd.jsx","webpack:///./src/IssueFilter.jsx","webpack:///./src/App.jsx"],"names":["IssueRow","issue","props","_id","status","owner","created","toDateString","effort","completionDate","title","Component","IssueTable","issueRows","issues","map","IssueList","state","createIssue","bind","loadData","fetch","then","response","ok","json","console","log","data","_metadata","total_count","records","forEach","Date","setState","res","alert","error","message","catch","err","newIssue","method","headers","body","JSON","stringify","updatedIssue","newIssues","concat","IssueAdd","handleSubmit","e","preventDefault","form","document","forms","issueAdd","value","IssueFilter","contentNode","getElementById","render","module","hot","accept"],"mappings":"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","file":"app.bundle.js","sourcesContent":["import React from 'react';\r\nimport 'whatwg-fetch';\r\n\r\nimport IssueAdd from './IssueAdd.jsx';\r\nimport IssueFilter from './IssueFilter.jsx';\r\n\r\n\r\nclass IssueRow extends React.Component{\r\n    render(){\r\n        const issue = this.props.issue;\r\n        return(\r\n            <tr>\r\n                <td>{issue._id}</td>\r\n                <td>{issue.status}</td>\r\n                <td>{issue.owner}</td>\r\n                <td>{issue.created.toDateString()}</td>\r\n                <td>{issue.effort}</td>\r\n                <td>{issue.completionDate ? issue.completionDate.toDateString() : ''}</td>\r\n                <td>{issue.title}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass IssueTable extends React.Component {\r\n    render(){\r\n        const issueRows = this.props.issues.map(issue => <IssueRow key={issue._id} issue={issue} />)\r\n        return (\r\n            <table className='bordered-table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Status</th>\r\n                        <th>Owner</th>\r\n                        <th>Created</th>\r\n                        <th>Effort</th>\r\n                        <th>Completion Date</th>\r\n                        <th>Title</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{issueRows}</tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class IssueList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {issues: []};\r\n        this.createIssue = this.createIssue.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadData();\r\n    }\r\n\r\n    loadData(){\r\n        fetch('/api/issues').then(response => {\r\n            if(response.ok){\r\n                response.json().then(data => {\r\n                    console.log(\"Total count of records:\", data._metadata.total_count);\r\n                    data.records.forEach(issue => {\r\n                        issue.created = new Date(issue.created);\r\n                        if(issue.completionDate){\r\n                            issue.completionDate = new Date(issue.completionDate);\r\n                        }\r\n                    });\r\n                    this.setState({issues: data.records});\r\n                })\r\n            }\r\n            else{\r\n                res.json().then(error => {\r\n                    alert(\"Failed to fetch issues:\" + error.message);\r\n                })\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    createIssue(newIssue) {\r\n        fetch('/api/issues', {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify(newIssue),\r\n        }).then(response => {\r\n            if(response.ok){\r\n                response.json().then(updatedIssue => {\r\n                    updatedIssue.created = new Date(updatedIssue.created);\r\n                    if(updatedIssue.completionDate)\r\n                       updatedIssue.completionDate = new Date(updatedIssue.completionDate);\r\n                    const newIssues = this.state.issues.concat(updatedIssue);\r\n                    this.setState({issues: newIssues});\r\n                })}\r\n            else{\r\n                response.json().then(error => {\r\n                    alert(\"Failed to add issue: \" + error.message)\r\n                });\r\n            }\r\n            }).catch(err => {\r\n             alert(\"Error in sending data to server: \" + err.message);\r\n         });\r\n    }\r\n\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h1>Issue Tracker</h1>\r\n                <IssueFilter />\r\n                <hr/>\r\n                <IssueTable issues={this.state.issues}/>\r\n                <hr/>\r\n                <IssueAdd createIssue={this.createIssue}/>\r\n                <hr />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/IssueList.jsx","import React from 'react';\r\n\r\nexport default class IssueAdd extends React.Component {\r\n    constructor(){\r\n        super();\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        var form = document.forms.issueAdd;\r\n        this.props.createIssue({\r\n            owner: form.owner.value,\r\n            title: form.title.value,\r\n            status: 'New',\r\n            created: new Date()\r\n        });\r\n        //clear the form for the next input\r\n        form.owner.value = \"\"; form.title.value = \"\";\r\n    }\r\n\r\n    render(){ \r\n        return (\r\n            <div>\r\n                <form name=\"issueAdd\" onSubmit={this.handleSubmit}>\r\n                    <input type=\"text\" name=\"owner\" placeholder=\"owner\" />\r\n                    <input type=\"text\" name=\"title\" placeholder=\"title\"/>\r\n                    <button>Add</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/IssueAdd.jsx","import React from 'react';\r\n\r\nexport default class IssueFilter extends React.Component {\r\n    render(){\r\n        return <div>This is a placeholder for the Issue Filter.</div>\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/IssueFilter.jsx","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport IssueList from './IssueList.jsx';\r\n\r\nvar contentNode = document.getElementById('contents');\r\n\r\nReactDOM.render(<IssueList />, contentNode); // Render the component inside the content Node\r\n\r\nif(module.hot){\r\n    module.hot.accept();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/App.jsx"],"sourceRoot":""}